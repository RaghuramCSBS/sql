-- '--' used to comment in sql
-- sql is not case sentive but typing keyword in caps is good pratice
-- use keyword used to select DB
-- eg:- use sql_inventory;
-- select(for reteive data) and where(for filter) are clauses after select keyword type the col you want to reteive from DB
-- AS keyword used to rename a col
-- eg:- SELECT name,unit_price AS initial_price,(unit_price * 2 ) AS new_price from products; 
-- distint keyword used to retrive unique data from select col no duplicates

-- <,>,<> is same as !=,=,>=,<= are compairsion operators in sql used in where clause
-- data formate in sql is yyyy-mm-dd
-- date and text data should given in "" in where clause
-- eg:- select * from orders where order_date > "2017-12-30";

-- operators and,or,not precedence (),and,or
-- arthemetic operations precedence follows BODMAS
-- not operator converts 'or' to 'and' ,'and' to 'or','<' to '>=' and '>' to '<='

-- 'In' operator used in some situation to reduce letter typed
-- eg:-select * from products where quantity_in_stock = 49 or 38 or 72 (wrong syntax here)
-- select * from products where quantity_in_stock = 49 or quantity_in_stock=38 or quantity_in_stock=72;(too long)
-- select * from products where quantity_in_stock in (49,38,72);(using IN)

-- between operator this operator need help of and
-- its also for reducing typing lines 
-- to reteive data that are in range
-- eg:- select * from customers where birth_date >= '1990-01-01' and birth_date <= '2000-01-01';(too long)
-- eg:- select * from customers where birth_date between '1990-01-01' and '2000-01-01';(using between)

-- STRING PATTERN FILERTING
-- operator like to filter by a specific string pattern
-- '%' represent any number of char
-- '_' represent 1 char
-- eg:- select * from customers where address like '%trail%' or address like '%avenue%';
-- eg:- select * from customers where phone like '%9';
-- eg:- select * from customers where (address like '%trail%' or address like '%avenue%') and phone like "%6";

-- REGEXP most powerful tool for filtering string patterns
-- representations '^' - start ,'$' - end,'|' - or operator,'[a,b,r]s' - a,b,r char that are before s char etc
-- eg:-  select * from customers where last_name regexp '^my|ex';
-- eg:- select * from customers where last_name regexp 'b[ru]';
-- eg:- select * from customers where last_name regexp 'ey$|on$';
-- eg:- select * from customers where first_name regexp 'elka|ambur';

-- keyword 'null' and 'is'
-- null represents None 
-- 'is' is used before null
-- eg:- SELECT * FROM sql_store(data base name).orders(table name) where shipper_id is null;

-- order by clause
-- this clause to used to sort a table by a col in ascending(default) and descending(use desc keyword)
-- if order by col1,col2 (first col1 are sorted if there is repeatation in col1 there col2 is sorted)
-- if col1,col7,col3 order by 2(col7),3(col3)
-- eg:- SELECT *,quantity * unit_price as total_price FROM sql_store.order_items where order_id=2 order by quantity * unit_price desc;

-- limit used to display only a specific no. of records
-- limit 3 (display first 3 records)
-- limit 5, 7 (eliminate first 5 records and display next 3 records)
-- eg:- SELECT *,quantity * unit_price as total_price FROM sql_store.order_items where order_id=2 order by quantity * unit_price desc;
